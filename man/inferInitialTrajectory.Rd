% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility_functions.R
\name{inferInitialTrajectory}
\alias{inferInitialTrajectory}
\title{Infer initial trajectory through space}
\usage{
inferInitialTrajectory(space, k)
}
\arguments{
\item{space}{A numeric matrix or a data frame containing the coordinates of samples.}

\item{k}{The number of clusters}
}
\value{
the initial trajectory obtained by this method
}
\description{
`inferInitialTrajectory` infers an initial trajectory for  `princurve::principal_curve` by clustering the points and calculating the shortest path through cluster centers. The shortest path takes into account the euclidean distance between cluster centers, and the density between those two points. Based on `infer_initial_trajectory` function from `SCORPIUS` package
}
\examples{

# specify features (i.e., clusters of interest)
which.clusters <- c(0,4,5)

# get dimensional reduction for specified clusters
dimSubset <- subsetDimRed(so.query, which.features = which.clusters)

# get initial trajectory
start.traj <- inferInitialTrajectory(as.matrix(dimSubset[["reduction"]]), k = length(unique(dimSubset[["features"]])))

}
\seealso{
\code{\link{subsetDimRed}}
}
