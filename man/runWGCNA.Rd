% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility_functions.R
\name{runWGCNA}
\alias{runWGCNA}
\title{run WGCNA analysis on scRNAseq expression matrix}
\usage{
runWGCNA(
  e.mat,
  s.mat = NULL,
  cor.metric = "rho_p",
  soft.power = 2,
  use.TOM = T,
  network.type = "signed",
  TOM.type = "signed",
  ...
)
}
\arguments{
\item{e.mat}{Expression matrix. Row entries are cells, column entries are genes. Colnames and rownames are expected.}

\item{s.mat}{Similarity matrix (optional). If not provided, will be computed using method specfiied by cor.metric.}

\item{cor.metric}{Correction measure to use. Default is "rho_p." See "dismay" package for additional options.}

\item{soft.power}{Soft power used to scale s.mat to a.mat (i.e., a.mat = s.mat ^ soft.power)}

\item{use.TOM}{Logical flag specifying whether to compute topoligical overlap matrix. If false, w.mat = a.mat.}

\item{network.type}{Network type. Allowed values are (unique abbreviations of) "unsigned", "signed", "signed hybrid"}

\item{TOM.type}{TOM type. Allowed values are "unsigned" or "signed"}

\item{...}{Additional arguments passessed to TOMsimilarity {WGCNA package}}
}
\value{
List containing  similarity matrix (s.mat), adacency matrix (a.mat), topological overlap matrix (w.mat) and disimilarity matrix (d.mat)
}
\description{
Run WGCNA analysis on scRNAseq expression matrix, using WGCNA R package.
}
\examples{

# Get expression matrix
which.data <- "scale"

# variable gene only matrix
use.var <- T
if (use.var){
  exp.mat <- getExpressionMatrix(so.query, only.variable = use.var, which.data = which.data, use.additional.genes = NA)
} else {
  exp.mat <- exp.mat.complete
}


# transpose expressio matrix (genes are columns)
t.exp.mat <- t(exp.mat)
datExpr <- as.matrix(t.exp.mat)
SubGeneNames=colnames(datExpr)

# capture output used to hide undesired print statement
print2hide <- capture.output(allowWGCNAThreads())

# transform matrix if necessary
if (min(datExpr) < 0) {
  datExpr.noz <- datExpr + abs(min(datExpr))
} else {
  datExpr.noz <- datExpr
}

# run WGCNA
output.all <- runWGCNA(datExpr.noz, cor.metric = "rho_p", soft.power = 2, use.TOM = T)

}
